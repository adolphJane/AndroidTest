apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'blockcanaryex'
apply plugin: 'bugly'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    resourcePrefix "co_"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

block {
    debugEnabled true //在debug模式下开启方法采样，默认为true
    releaseEnabled false //在release模式下开启方法采样，默认为false
    excludePackages = [] //不希望进行方法采样的包名, 比如: ['com.android', 'android.support']
    excludeClasses = [] //不希望进行方法采样的类名
    includePackages = [] //指定开启方法采样的包名，如果不为空，则其它没有包括进来的包都不会开启方法采样

    scope {
        project true //开启主项目代码方法采样，默认为true
        projectLocalDep true //开启主项目本地libs代码(比如.jar)方法采样，默认为false,
        subProject true //开启子项目代码方法采样，默认为true
        subProjectLocalDep true //开启子项目本地libs方法采样，默认为false
        externalLibraries false //开启第三方libs方法采样，默认为false
    }
}

bugly {
    appId = '5d8177ce84'
    appKey = 'ba5f4eb9-f262-4867-97d8-85cc08c12e2a'
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    //kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //test
    testApi rootProject.ext.dependencies.junit
    androidTestApi rootProject.ext.dependencies.runner
    androidTestApi rootProject.ext.dependencies.espresso
    //google
    api rootProject.ext.dependencies.constraint
    api "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:design:$rootProject.supportLibraryVersion"
    //log
    api "com.orhanobut:logger:$rootProject.loggerVersion"
    //router
    api "com.alibaba:arouter-api:$rootProject.arouterVersion"
    //LeakCanary
    debugApi "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryVersion"
    releaseApi "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"
    //BlockCanaryEx
    debugApi "com.letv.sarrsdesktop:BlockCanaryExJRT:$rootProject.blockcanaryVersion"
    releaseApi "com.letv.sarrsdesktop:BlockCanaryExJRTNoOp:$rootProject.blockcanaryVersion"
    testApi "com.letv.sarrsdesktop:BlockCanaryExJRTNoOp:$rootProject.blockcanaryVersion"
    //bugly
    api "com.tencent.bugly:crashreport:$rootProject.buglyVersion"
    api "com.tencent.bugly:nativecrashreport:$rootProject.buglyNativeVersion"
}
